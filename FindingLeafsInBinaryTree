 package com.katochventures.www; 

/* * Java Program to print all leaf nodes of binary tree * using recursion *
input :
   a
* /  \
* b   f
* / \ / \
* c e g h
* /      \
* d       k
*
* output: d e g k */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class FindingLeafsInBinaryTree
{
public static void main (String[] args) throws java.lang.Exception
{
TreeNode d = new TreeNode("d");
TreeNode e = new TreeNode("e");
TreeNode g = new TreeNode("g");
TreeNode k = new TreeNode("k");

TreeNode c = new TreeNode("c", d, null);
TreeNode h = new TreeNode("h", null, k);

        TreeNode b = new TreeNode("b", c,e);
        TreeNode f = new TreeNode("f", g, h);
       
        TreeNode root = new TreeNode("a",b,f);
       
        System.out.println("Printing all leaves");
        printLeaves(root);





}

public static class TreeNode{
   
   String value;
   TreeNode left;
   TreeNode right;
   
   TreeNode(String value){
       this.value = value;
   }
   
   TreeNode(String data, TreeNode left, TreeNode right){
       this.value = data;
       this.left = left;
       this.right = right;
   }
   
   Boolean isLeaf(){
      return left==null? right==null:false;
   }
   
}

public static void printLeaves(TreeNode node){
   
   if(node==null)
       return;
       
  if(node.isLeaf()){
      System.out.println("Leaf is: " + node.value);
  }
 
  printLeaves(node.left);
  printLeaves(node.right);
   
}

}
